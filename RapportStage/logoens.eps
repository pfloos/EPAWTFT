%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.6.3 (Build 10D573) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 263 97
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 263 97
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
155 0 108 97 rc
150.77596 47.139404 m
150.77596 35.737057 l
170.38947 35.737057 l
170.38947 47.139404 l
150.77596 47.139404 l
150.77596 58.31546 m
170.50247 58.31546 l
170.50247 69.48896 l
150.77596 69.48896 l
150.77596 58.31546 l
113.14145 47.139404 m
93.072952 47.139404 l
93.072952 35.619907 l
113.14145 35.737057 l
113.14145 47.139404 l
93.072952 58.31546 m
113.14145 58.31546 l
113.14145 69.48896 l
93.072952 69.48896 l
93.072952 58.31546 l
93.072952 91.617958 m
93.072952 80.211456 l
122.03995 80.211456 l
150.77596 80.211456 l
170.38947 80.211456 l
170.38947 87.813461 163.85045 91.617958 150.77596 91.617958 c
141.88145 91.617958 l
122.03995 91.617958 l
111.77396 91.617958 l
93.072952 91.617958 l
f*
0.1 w
1 J
1 j
1 0 0 1 -90 -23 cm
240.77596 70.139404 m
240.77596 58.737057 l
260.38947 58.737057 l
260.38947 70.139404 l
240.77596 70.139404 l
240.77596 81.31546 m
260.50247 81.31546 l
260.50247 92.48896 l
240.77596 92.48896 l
240.77596 81.31546 l
203.14145 70.139404 m
183.07295 70.139404 l
183.07295 58.619907 l
203.14145 58.737057 l
203.14145 70.139404 l
183.07295 81.31546 m
203.14145 81.31546 l
203.14145 92.48896 l
183.07295 92.48896 l
183.07295 81.31546 l
183.07295 114.61796 m
183.07295 103.21146 l
212.03995 103.21146 l
240.77596 103.21146 l
260.38947 103.21146 l
260.38947 110.81346 253.85045 114.61796 240.77596 114.61796 c
231.88145 114.61796 l
212.03995 114.61796 l
201.77396 114.61796 l
183.07295 114.61796 l
240.77596 70.139404 m
240.77596 58.737057 l
260.38947 58.737057 l
260.38947 70.139404 l
240.77596 70.139404 l
240.77596 81.31546 m
260.50247 81.31546 l
260.50247 92.48896 l
240.77596 92.48896 l
240.77596 81.31546 l
203.14145 70.139404 m
183.07295 70.139404 l
183.07295 58.619907 l
203.14145 58.737057 l
203.14145 70.139404 l
183.07295 81.31546 m
203.14145 81.31546 l
203.14145 92.48896 l
183.07295 92.48896 l
183.07295 81.31546 l
183.07295 114.61796 m
183.07295 103.21146 l
212.03995 103.21146 l
240.77596 103.21146 l
260.38947 103.21146 l
260.38947 110.81346 253.85045 114.61796 240.77596 114.61796 c
231.88145 114.61796 l
212.03995 114.61796 l
201.77396 114.61796 l
183.07295 114.61796 l
S
CM
258.47748 58.31546 m
258.47748 69.48896 l
181.15695 69.48896 l
181.15695 58.31546 l
258.47748 58.31546 l
201.00098 91.617958 m
187.77396 91.617958 181.15695 87.813461 181.15695 80.211456 c
209.89548 80.211456 l
258.47748 80.211456 l
258.47748 91.617958 l
209.89548 91.617958 l
201.00098 91.617958 l
228.36798 47.139404 m
181.15695 47.139404 l
181.15695 35.737057 l
238.63147 35.737057 l
251.86197 35.737057 258.47748 39.535904 258.47748 47.139404 c
238.63147 47.139404 l
228.36798 47.139404 l
f*
1 0 0 1 -90 -23 cm
348.47748 81.31546 m
348.47748 92.48896 l
271.15695 92.48896 l
271.15695 81.31546 l
348.47748 81.31546 l
291.00098 114.61796 m
277.77396 114.61796 271.15695 110.81346 271.15695 103.21146 c
299.89548 103.21146 l
348.47748 103.21146 l
348.47748 114.61796 l
299.89548 114.61796 l
291.00098 114.61796 l
318.36798 70.139404 m
271.15695 70.139404 l
271.15695 58.737057 l
328.63147 58.737057 l
341.86197 58.737057 348.47748 62.535904 348.47748 70.139404 c
328.63147 70.139404 l
318.36798 70.139404 l
348.47748 81.31546 m
348.47748 92.48896 l
271.15695 92.48896 l
271.15695 81.31546 l
348.47748 81.31546 l
291.00098 114.61796 m
277.77396 114.61796 271.15695 110.81346 271.15695 103.21146 c
299.89548 103.21146 l
348.47748 103.21146 l
348.47748 114.61796 l
299.89548 114.61796 l
291.00098 114.61796 l
318.36798 70.139404 m
271.15695 70.139404 l
271.15695 58.737057 l
328.63147 58.737057 l
341.86197 58.737057 348.47748 62.535904 348.47748 70.139404 c
328.63147 70.139404 l
318.36798 70.139404 l
S
CM
160.46146 18.742958 m
160.77045 20.780056 l
159.70795 21.155056 158.49095 21.332806 157.47345 21.332806 c
154.68245 21.332806 152.51445 19.869907 152.51445 17.127708 c
152.51445 12.321056 159.15495 13.274208 159.15495 9.8191109 c
159.15495 8.0027065 157.38345 7.2956772 156.12395 7.2956772 c
154.99095 7.2956772 153.66495 7.7390366 152.91295 8.0476265 c
152.69044 5.9890366 l
153.70995 5.6589565 154.77245 5.3464565 155.85796 5.3464565 c
158.95795 5.3464565 161.50246 6.6530972 161.50246 9.9519272 c
161.50246 15.045654 154.85796 14.360107 154.85796 17.326904 c
154.85796 18.942158 156.32095 19.383556 157.55945 19.383556 c
158.71346 19.383556 159.33295 19.184357 160.46146 18.742958 c
f*
1 0 0 1 -90 -23 cm
250.46146 41.742958 m
250.77045 43.780056 l
249.70795 44.155056 248.49095 44.332806 247.47345 44.332806 c
244.68245 44.332806 242.51445 42.869907 242.51445 40.127708 c
242.51445 35.321056 249.15495 36.274208 249.15495 32.819111 c
249.15495 31.002707 247.38345 30.295677 246.12395 30.295677 c
244.99095 30.295677 243.66495 30.739037 242.91295 31.047626 c
242.69044 28.989037 l
243.70995 28.658957 244.77245 28.346457 245.85796 28.346457 c
248.95795 28.346457 251.50246 29.653097 251.50246 32.951927 c
251.50246 38.045654 244.85796 37.360107 244.85796 40.326904 c
244.85796 41.942158 246.32095 42.383556 247.55945 42.383556 c
248.71346 42.383556 249.33295 42.184357 250.46146 41.742958 c
250.77045 43.780056 l
249.70795 44.155056 248.49095 44.332806 247.47345 44.332806 c
244.68245 44.332806 242.51445 42.869907 242.51445 40.127708 c
242.51445 35.321056 249.15495 36.274208 249.15495 32.819111 c
249.15495 31.002707 247.38345 30.295677 246.12395 30.295677 c
244.99095 30.295677 243.66495 30.739037 242.91295 31.047626 c
242.69044 28.989037 l
243.70995 28.658957 244.77245 28.346457 245.85796 28.346457 c
248.95795 28.346457 251.50246 29.653097 251.50246 32.951927 c
251.50246 38.045654 244.85796 37.360107 244.85796 40.326904 c
244.85796 41.942158 246.32095 42.383556 247.55945 42.383556 c
248.71346 42.383556 249.33295 42.184357 250.46146 41.742958 c
S
CM
172.74695 7.5613022 m
172.74695 19.117958 l
175.33847 19.117958 l
178.52597 19.117958 180.98145 16.994907 180.98145 13.383556 c
180.98145 9.3991928 178.88147 7.5613022 175.07095 7.5613022 c
172.74695 7.5613022 l
170.53397 21.067158 m
170.53397 5.6140347 l
175.09445 5.6140347 l
180.18646 5.6140347 183.33096 8.2937222 183.33096 13.471458 c
183.33096 18.233154 179.67645 21.067158 175.09445 21.067158 c
170.53397 21.067158 l
f*
1 0 0 1 -90 -23 cm
262.74695 30.561302 m
262.74695 42.117958 l
265.33847 42.117958 l
268.52597 42.117958 270.98145 39.994907 270.98145 36.383556 c
270.98145 32.399193 268.88147 30.561302 265.07095 30.561302 c
262.74695 30.561302 l
260.53397 44.067158 m
260.53397 28.614035 l
265.09445 28.614035 l
270.18646 28.614035 273.33096 31.293722 273.33096 36.471458 c
273.33096 41.233154 269.67645 44.067158 265.09445 44.067158 c
260.53397 44.067158 l
262.74695 30.561302 m
262.74695 42.117958 l
265.33847 42.117958 l
268.52597 42.117958 270.98145 39.994907 270.98145 36.383556 c
270.98145 32.399193 268.88147 30.561302 265.07095 30.561302 c
262.74695 30.561302 l
260.53397 44.067158 m
260.53397 28.614035 l
265.09445 28.614035 l
270.18646 28.614035 273.33096 31.293722 273.33096 36.471458 c
273.33096 41.233154 269.67645 44.067158 265.09445 44.067158 c
260.53397 44.067158 l
S
CM
186.75845 21.067158 m
186.75845 5.6140347 l
195.41498 5.6140347 l
195.41498 7.5613022 l
188.97345 7.5613022 l
188.97345 12.653107 l
194.83847 12.653107 l
194.83847 14.602306 l
188.97345 14.602306 l
188.97345 19.117958 l
195.41498 19.117958 l
195.41498 21.067158 l
186.75845 21.067158 l
f*
1 0 0 1 -90 -23 cm
276.75845 44.067158 m
276.75845 28.614035 l
285.41498 28.614035 l
285.41498 30.561302 l
278.97345 30.561302 l
278.97345 35.653107 l
284.83847 35.653107 l
284.83847 37.602306 l
278.97345 37.602306 l
278.97345 42.117958 l
285.41498 42.117958 l
285.41498 44.067158 l
276.75845 44.067158 l
276.75845 28.614035 l
285.41498 28.614035 l
285.41498 30.561302 l
278.97345 30.561302 l
278.97345 35.653107 l
284.83847 35.653107 l
284.83847 37.602306 l
278.97345 37.602306 l
278.97345 42.117958 l
285.41498 42.117958 l
285.41498 44.067158 l
276.75845 44.067158 l
S
CM
205.09045 21.067158 m
205.09045 5.6140347 l
213.76846 5.6140347 l
213.76846 7.5613022 l
207.30145 7.5613022 l
207.30145 21.067158 l
205.09045 21.067158 l
f*
1 0 0 1 -90 -23 cm
295.09045 44.067158 m
295.09045 28.614035 l
303.76846 28.614035 l
303.76846 30.561302 l
297.30145 30.561302 l
297.30145 44.067158 l
295.09045 44.067158 l
295.09045 28.614035 l
303.76846 28.614035 l
303.76846 30.561302 l
297.30145 30.561302 l
297.30145 44.067158 l
295.09045 44.067158 l
S
CM
218.46347 12.078857 m
218.46347 5.6140347 l
220.68048 5.6140347 l
220.68048 12.078857 l
226.69995 21.067158 l
224.10995 21.067158 l
219.61597 14.135506 l
215.01047 21.067158 l
212.42047 21.067158 l
218.46347 12.078857 l
f*
1 0 0 1 -90 -23 cm
308.46347 35.078857 m
308.46347 28.614035 l
310.68048 28.614035 l
310.68048 35.078857 l
316.69995 44.067158 l
314.10995 44.067158 l
309.61597 37.135506 l
305.01047 44.067158 l
302.42047 44.067158 l
308.46347 35.078857 l
308.46347 28.614035 l
310.68048 28.614035 l
310.68048 35.078857 l
316.69995 44.067158 l
314.10995 44.067158 l
309.61597 37.135506 l
305.01047 44.067158 l
302.42047 44.067158 l
308.46347 35.078857 l
S
CM
235.55548 7.2956772 m
231.98895 7.2956772 230.46347 10.26247 230.46347 13.340607 c
230.46347 16.483154 232.14346 19.405056 235.55548 19.383556 c
238.96545 19.405056 240.64548 16.483154 240.64548 13.340607 c
240.64548 10.26247 239.11996 7.2956772 235.55548 7.2956772 c
235.55548 21.332806 m
230.86197 21.332806 228.11597 17.920654 228.11597 13.340607 c
228.11597 8.6472359 230.83847 5.3464565 235.55548 5.3464565 c
240.27048 5.3464565 242.99496 8.6472359 242.99496 13.340607 c
242.99496 17.920654 240.24698 21.332806 235.55548 21.332806 c
f*
1 0 0 1 -90 -23 cm
325.55548 30.295677 m
321.98895 30.295677 320.46347 33.26247 320.46347 36.340607 c
320.46347 39.483154 322.14346 42.405056 325.55548 42.383556 c
328.96545 42.405056 330.64548 39.483154 330.64548 36.340607 c
330.64548 33.26247 329.11996 30.295677 325.55548 30.295677 c
325.55548 44.332806 m
320.86197 44.332806 318.11597 40.920654 318.11597 36.340607 c
318.11597 31.647236 320.83847 28.346457 325.55548 28.346457 c
330.27048 28.346457 332.99496 31.647236 332.99496 36.340607 c
332.99496 40.920654 330.24698 44.332806 325.55548 44.332806 c
325.55548 30.295677 m
321.98895 30.295677 320.46347 33.26247 320.46347 36.340607 c
320.46347 39.483154 322.14346 42.405056 325.55548 42.383556 c
328.96545 42.405056 330.64548 39.483154 330.64548 36.340607 c
330.64548 33.26247 329.11996 30.295677 325.55548 30.295677 c
325.55548 44.332806 m
320.86197 44.332806 318.11597 40.920654 318.11597 36.340607 c
318.11597 31.647236 320.83847 28.346457 325.55548 28.346457 c
330.27048 28.346457 332.99496 31.647236 332.99496 36.340607 c
332.99496 40.920654 330.24698 44.332806 325.55548 44.332806 c
S
CM
246.11395 21.067158 m
246.11395 5.6140347 l
248.32898 5.6140347 l
248.32898 18.321056 l
248.37198 18.321056 l
255.36798 5.6140347 l
258.20197 5.6140347 l
258.20197 21.067158 l
255.98697 21.067158 l
255.98697 8.6257515 l
255.94196 8.6257515 l
249.12598 21.067158 l
246.11395 21.067158 l
f*
1 0 0 1 -90 -23 cm
336.11395 44.067158 m
336.11395 28.614035 l
338.32898 28.614035 l
338.32898 41.321056 l
338.37198 41.321056 l
345.36798 28.614035 l
348.20197 28.614035 l
348.20197 44.067158 l
345.98697 44.067158 l
345.98697 31.625751 l
345.94196 31.625751 l
339.12598 44.067158 l
336.11395 44.067158 l
336.11395 28.614035 l
338.32898 28.614035 l
338.32898 41.321056 l
338.37198 41.321056 l
345.36798 28.614035 l
348.20197 28.614035 l
348.20197 44.067158 l
345.98697 44.067158 l
345.98697 31.625751 l
345.94196 31.625751 l
339.12598 44.067158 l
336.11395 44.067158 l
S
Q
q
0 0 155 97 rc
25.334961 47.139404 m
5.2624588 47.139404 l
5.2624588 35.737057 l
34.231461 35.737057 l
62.967453 35.737057 l
82.580948 35.737057 l
82.580948 47.139404 l
62.967453 47.139404 l
54.070953 47.139404 l
34.231461 47.139404 l
25.334961 47.139404 l
5.2624588 58.31546 m
34.231461 58.31546 l
62.967453 58.31546 l
82.695953 58.31546 l
82.695953 69.48896 l
62.967453 69.48896 l
54.070953 69.48896 l
34.231461 69.48896 l
25.334961 69.48896 l
5.2624588 69.48896 l
5.2624588 58.31546 l
5.2624588 91.617958 m
5.2624588 80.211456 l
34.231461 80.211456 l
62.967453 80.211456 l
82.580948 80.211456 l
82.580948 91.617958 l
62.967453 91.617958 l
54.070953 91.617958 l
34.231461 91.617958 l
25.334961 91.617958 l
5.2624588 91.617958 l
f*
0.1 w
1 J
1 j
1 0 0 1 -90 -23 cm
115.33496 70.139404 m
95.262459 70.139404 l
95.262459 58.737057 l
124.23146 58.737057 l
152.96745 58.737057 l
172.58095 58.737057 l
172.58095 70.139404 l
152.96745 70.139404 l
144.07095 70.139404 l
124.23146 70.139404 l
115.33496 70.139404 l
95.262459 81.31546 m
124.23146 81.31546 l
152.96745 81.31546 l
172.69595 81.31546 l
172.69595 92.48896 l
152.96745 92.48896 l
144.07095 92.48896 l
124.23146 92.48896 l
115.33496 92.48896 l
95.262459 92.48896 l
95.262459 81.31546 l
95.262459 114.61796 m
95.262459 103.21146 l
124.23146 103.21146 l
152.96745 103.21146 l
172.58095 103.21146 l
172.58095 114.61796 l
152.96745 114.61796 l
144.07095 114.61796 l
124.23146 114.61796 l
115.33496 114.61796 l
95.262459 114.61796 l
115.33496 70.139404 m
95.262459 70.139404 l
95.262459 58.737057 l
124.23146 58.737057 l
152.96745 58.737057 l
172.58095 58.737057 l
172.58095 70.139404 l
152.96745 70.139404 l
144.07095 70.139404 l
124.23146 70.139404 l
115.33496 70.139404 l
95.262459 81.31546 m
124.23146 81.31546 l
152.96745 81.31546 l
172.69595 81.31546 l
172.69595 92.48896 l
152.96745 92.48896 l
144.07095 92.48896 l
124.23146 92.48896 l
115.33496 92.48896 l
95.262459 92.48896 l
95.262459 81.31546 l
95.262459 114.61796 m
95.262459 103.21146 l
124.23146 103.21146 l
152.96745 103.21146 l
172.58095 103.21146 l
172.58095 114.61796 l
152.96745 114.61796 l
144.07095 114.61796 l
124.23146 114.61796 l
115.33496 114.61796 l
95.262459 114.61796 l
S
CM
150.77596 47.139404 m
150.77596 35.737057 l
170.38947 35.737057 l
170.38947 47.139404 l
150.77596 47.139404 l
150.77596 58.31546 m
170.50247 58.31546 l
170.50247 69.48896 l
150.77596 69.48896 l
150.77596 58.31546 l
113.14145 47.139404 m
93.072952 47.139404 l
93.072952 35.619907 l
113.14145 35.737057 l
113.14145 47.139404 l
93.072952 58.31546 m
113.14145 58.31546 l
113.14145 69.48896 l
93.072952 69.48896 l
93.072952 58.31546 l
93.072952 91.617958 m
93.072952 80.211456 l
122.03995 80.211456 l
150.77596 80.211456 l
170.38947 80.211456 l
170.38947 87.813461 163.85045 91.617958 150.77596 91.617958 c
141.88145 91.617958 l
122.03995 91.617958 l
111.77396 91.617958 l
93.072952 91.617958 l
f*
1 0 0 1 -90 -23 cm
240.77596 70.139404 m
240.77596 58.737057 l
260.38947 58.737057 l
260.38947 70.139404 l
240.77596 70.139404 l
240.77596 81.31546 m
260.50247 81.31546 l
260.50247 92.48896 l
240.77596 92.48896 l
240.77596 81.31546 l
203.14145 70.139404 m
183.07295 70.139404 l
183.07295 58.619907 l
203.14145 58.737057 l
203.14145 70.139404 l
183.07295 81.31546 m
203.14145 81.31546 l
203.14145 92.48896 l
183.07295 92.48896 l
183.07295 81.31546 l
183.07295 114.61796 m
183.07295 103.21146 l
212.03995 103.21146 l
240.77596 103.21146 l
260.38947 103.21146 l
260.38947 110.81346 253.85045 114.61796 240.77596 114.61796 c
231.88145 114.61796 l
212.03995 114.61796 l
201.77396 114.61796 l
183.07295 114.61796 l
240.77596 70.139404 m
240.77596 58.737057 l
260.38947 58.737057 l
260.38947 70.139404 l
240.77596 70.139404 l
240.77596 81.31546 m
260.50247 81.31546 l
260.50247 92.48896 l
240.77596 92.48896 l
240.77596 81.31546 l
203.14145 70.139404 m
183.07295 70.139404 l
183.07295 58.619907 l
203.14145 58.737057 l
203.14145 70.139404 l
183.07295 81.31546 m
203.14145 81.31546 l
203.14145 92.48896 l
183.07295 92.48896 l
183.07295 81.31546 l
183.07295 114.61796 m
183.07295 103.21146 l
212.03995 103.21146 l
240.77596 103.21146 l
260.38947 103.21146 l
260.38947 110.81346 253.85045 114.61796 240.77596 114.61796 c
231.88145 114.61796 l
212.03995 114.61796 l
201.77396 114.61796 l
183.07295 114.61796 l
S
CM
125.26445 21.067158 m
125.26445 5.6140347 l
133.91895 5.6140347 l
133.91895 7.5613022 l
127.47745 7.5613022 l
127.47745 12.653107 l
133.34445 12.653107 l
133.34445 14.602306 l
127.47745 14.602306 l
127.47745 19.117958 l
133.91895 19.117958 l
133.91895 21.067158 l
125.26445 21.067158 l
f*
1 0 0 1 -90 -23 cm
215.26445 44.067158 m
215.26445 28.614035 l
223.91895 28.614035 l
223.91895 30.561302 l
217.47745 30.561302 l
217.47745 35.653107 l
223.34445 35.653107 l
223.34445 37.602306 l
217.47745 37.602306 l
217.47745 42.117958 l
223.91895 42.117958 l
223.91895 44.067158 l
215.26445 44.067158 l
215.26445 28.614035 l
223.91895 28.614035 l
223.91895 30.561302 l
217.47745 30.561302 l
217.47745 35.653107 l
223.34445 35.653107 l
223.34445 37.602306 l
217.47745 37.602306 l
217.47745 42.117958 l
223.91895 42.117958 l
223.91895 44.067158 l
215.26445 44.067158 l
S
CM
137.44044 21.067158 m
137.44044 5.6140347 l
139.65096 5.6140347 l
139.65096 18.321056 l
139.69595 18.321056 l
146.69196 5.6140347 l
149.52596 5.6140347 l
149.52596 21.067158 l
147.31345 21.067158 l
147.31345 8.6257515 l
147.26845 8.6257515 l
140.44995 21.067158 l
137.44044 21.067158 l
f*
1 0 0 1 -90 -23 cm
227.44044 44.067158 m
227.44044 28.614035 l
229.65096 28.614035 l
229.65096 41.321056 l
229.69595 41.321056 l
236.69196 28.614035 l
239.52596 28.614035 l
239.52596 44.067158 l
237.31345 44.067158 l
237.31345 31.625751 l
237.26845 31.625751 l
230.44995 44.067158 l
227.44044 44.067158 l
227.44044 28.614035 l
229.65096 28.614035 l
229.65096 41.321056 l
229.69595 41.321056 l
236.69196 28.614035 l
239.52596 28.614035 l
239.52596 44.067158 l
237.31345 44.067158 l
237.31345 31.625751 l
237.26845 31.625751 l
230.44995 44.067158 l
227.44044 44.067158 l
S
CM
160.46146 18.742958 m
160.77045 20.780056 l
159.70795 21.155056 158.49095 21.332806 157.47345 21.332806 c
154.68245 21.332806 152.51445 19.869907 152.51445 17.127708 c
152.51445 12.321056 159.15495 13.274208 159.15495 9.8191109 c
159.15495 8.0027065 157.38345 7.2956772 156.12395 7.2956772 c
154.99095 7.2956772 153.66495 7.7390366 152.91295 8.0476265 c
152.69044 5.9890366 l
153.70995 5.6589565 154.77245 5.3464565 155.85796 5.3464565 c
158.95795 5.3464565 161.50246 6.6530972 161.50246 9.9519272 c
161.50246 15.045654 154.85796 14.360107 154.85796 17.326904 c
154.85796 18.942158 156.32095 19.383556 157.55945 19.383556 c
158.71346 19.383556 159.33295 19.184357 160.46146 18.742958 c
f*
1 0 0 1 -90 -23 cm
250.46146 41.742958 m
250.77045 43.780056 l
249.70795 44.155056 248.49095 44.332806 247.47345 44.332806 c
244.68245 44.332806 242.51445 42.869907 242.51445 40.127708 c
242.51445 35.321056 249.15495 36.274208 249.15495 32.819111 c
249.15495 31.002707 247.38345 30.295677 246.12395 30.295677 c
244.99095 30.295677 243.66495 30.739037 242.91295 31.047626 c
242.69044 28.989037 l
243.70995 28.658957 244.77245 28.346457 245.85796 28.346457 c
248.95795 28.346457 251.50246 29.653097 251.50246 32.951927 c
251.50246 38.045654 244.85796 37.360107 244.85796 40.326904 c
244.85796 41.942158 246.32095 42.383556 247.55945 42.383556 c
248.71346 42.383556 249.33295 42.184357 250.46146 41.742958 c
250.77045 43.780056 l
249.70795 44.155056 248.49095 44.332806 247.47345 44.332806 c
244.68245 44.332806 242.51445 42.869907 242.51445 40.127708 c
242.51445 35.321056 249.15495 36.274208 249.15495 32.819111 c
249.15495 31.002707 247.38345 30.295677 246.12395 30.295677 c
244.99095 30.295677 243.66495 30.739037 242.91295 31.047626 c
242.69044 28.989037 l
243.70995 28.658957 244.77245 28.346457 245.85796 28.346457 c
248.95795 28.346457 251.50246 29.653097 251.50246 32.951927 c
251.50246 38.045654 244.85796 37.360107 244.85796 40.326904 c
244.85796 41.942158 246.32095 42.383556 247.55945 42.383556 c
248.71346 42.383556 249.33295 42.184357 250.46146 41.742958 c
S
ep
end
%%Trailer
%%EOF
